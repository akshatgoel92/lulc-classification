# Use Ubuntu base image - better ARM64 support than Alpine
FROM ubuntu:22.04

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies for geospatial libraries
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    gdal-bin \
    libgdal-dev \
    libproj-dev \
    libgeos-dev \
    libspatialite-dev \
    libsqlite3-mod-spatialite \
    libudunits2-dev \
    libffi-dev \
    libssl-dev \
    pkg-config \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables for GDAL
ENV GDAL_CONFIG=/usr/bin/gdal-config
ENV CPLUS_INCLUDE_PATH=/usr/include/gdal
ENV C_INCLUDE_PATH=/usr/include/gdal
ENV GDAL_DATA=/usr/share/gdal

# Create app directory
WORKDIR /app

# Create python symlink and upgrade pip
RUN ln -s /usr/bin/python3 /usr/bin/python && \
    python -m pip install --upgrade pip setuptools wheel

# Install Python packages in order of dependency complexity
# Start with basic packages
RUN pip install --no-cache-dir \
    numpy==1.24.4 \
    pandas==2.1.4

# Install GDAL Python bindings (match system GDAL version)
RUN pip install --no-cache-dir \
    GDAL==$(gdal-config --version)

# Install geospatial packages
RUN pip install --no-cache-dir \
    Fiona==1.9.5 \
    Shapely==2.0.2 \
    pyproj==3.6.1 \
    rasterio==1.3.9 \
    geopandas==0.14.1

# Install web framework packages
RUN pip install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    python-multipart==0.0.6 \
    pydantic==2.5.0 \
    aiofiles \
    requests==2.31.0

# Install visualization packages
RUN pip install --no-cache-dir \
    matplotlib==3.8.2 \
    plotly==5.17.0 \
    streamlit==1.28.1 \
    Pillow==10.1.0

# Create necessary directories
RUN mkdir -p /app/data/kmls /app/uploads /app/.streamlit

# Copy application files
COPY . /app/

# Create Streamlit config
RUN echo '[server]\n\
port = 8501\n\
address = "0.0.0.0"\n\
headless = true\n\
enableCORS = false\n\
enableXsrfProtection = false\n\
\n\
[browser]\n\
gatherUsageStats = false\n\
\n\
[theme]\n\
primaryColor = "#2E8B57"\n\
backgroundColor = "#FFFFFF"\n\
secondaryBackgroundColor = "#F0F2F6"\n\
textColor = "#262730"' > /app/.streamlit/config.toml

# Expose ports
EXPOSE 8000 8501

# Default command (can be overridden)
CMD ["python", "-m", "uvicorn", "app:app", "--host", "0.0.0.0", "--port", "8000"]